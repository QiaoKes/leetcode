/*
三步问题。有个小孩正在上楼梯，楼梯有n阶台阶，小孩一次可以上1阶、2阶或3阶。实现一种方法，计算小孩有多少种上楼梯的方式。结果可能很大，你需要对结果模1000000007。

示例1:
 输入：n = 3 
 输出：4
 说明: 有四种走法

示例2:
 输入：n = 5
 输出：13
*/
class Solution {
public:
    int waysToStep(int n) {
        if(n == 1) return 1;
        if(n == 2) return 2;
        if(n == 3) return 4;
        const long long mod = 1000000007;
        vector<long long> dp(n+1, 0);
        dp[1] = 1;
        dp[2] = 2;
        dp[3] = 4;
        for(int i = 4; i < n+1; ++i) {
            dp[i] = ((dp[i-1]%mod + dp[i-2]%mod)%mod + dp[i-3]%mod)%mod;
        }
        return dp[n]%mod;
    }
};

//优化
class Solution {
public:
    int waysToStep(int n) {
        if(n == 1) return 1;
        if(n == 2) return 2;
        if(n == 3) return 4;
        const long long mod = 1000000007;
        vector<long long> dp(n+1, 0);
        long long a = 1;
        long long b = 2;
        long long c = 4;
        for(int i = 4; i <= n; ++i) {
            auto temp = ((a%mod + b%mod)%mod + c%mod)%mod;
            a = b; b = c; c = temp;
        }
        return c%mod;
    }
};
